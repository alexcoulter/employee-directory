{"version":3,"sources":["utils/API.js","components/EmployeeCard.js","components/EmployeeList.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["cb","axios","get","then","response","data","results","catch","error","console","log","key","order","sort","a","b","x","name","y","dob","EmployeeCard","props","className","alt","firstName","src","image","lastName","gender","age","href","email","EmployeeList","scope","onClick","handleOrder","filtered","map","employee","id","first","last","Header","view","changeView","type","placeholder","aria-label","onChange","handleInputChange","value","Footer","App","state","employees","searchTerm","getEmployees","API","empObj","setState","event","persist","orderBy","target","attributes","getNamedItem","orderedObj","preventDefault","newSearch","toLowerCase","filter","person","includes","toString","newView","this","$","window","resize","css","height","picture","large","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.45d771ac.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  search: function (cb) {\r\n    axios.get(\"https://randomuser.me/api/?results=30\")\r\n      .then(function (response) {\r\n        cb(response.data.results);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        return error;\r\n      });\r\n  },\r\n\r\n  sortJSON: function (data, key, order, cb) {\r\n // eslint-disable-next-line\r\n    cb(data.sort(function (a, b) {\r\n      if (key === \"first\" || key === \"last\") {\r\n        var x = a.name[key];\r\n        var y = b.name[key];\r\n      }\r\n      else if (key === \"email\") {\r\n        x = a[key];\r\n        y = b[key];\r\n      }\r\n      else if (key === \"age\") {\r\n        x = a.dob[key];\r\n        y = b.dob[key];\r\n      }\r\n\r\n      if (order === '123') { return ((x < y) ? -1 : ((x > y) ? 1 : 0)); }\r\n      if (order === '321') { return ((x > y) ? -1 : ((x < y) ? 1 : 0)); }\r\n    }));\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.firstName} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.firstName}  {props.lastName}\r\n          </li>\r\n          <li>\r\n            <strong>Gender:</strong> {props.gender}\r\n          </li>\r\n          <li>\r\n            <strong>Age:</strong> {props.age}\r\n          </li>\r\n          <li>\r\n            <strong>Email: </strong><a href={`mailto: ${props.email}`}>{props.email}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeList(props) {\r\n  return (\r\n    <div className=\"table-responsive-sm\">\r\n      <table className=\"table table-striped table-light table-bordered table-hover\">\r\n        <thead className = \"thead-secondary\">\r\n          <tr>\r\n            <th scope=\"col\"><button className = \"btn btn-info p2 px-4\" name=\"first\"  onClick={props.handleOrder}>First Name</button></th>\r\n            <th scope=\"col\"><button className = \"btn btn-info p2 px-4 rounded\" name=\"last\"  onClick={props.handleOrder}>Last Name</button></th>\r\n            <th scope=\"col\"><button className = \"btn btn-info p2 px-4\" name=\"age\"  onClick={props.handleOrder}>Age</button></th>\r\n            <th scope=\"col\"><button className = \"btn btn-info p2 px-4\" name=\"email\"  onClick={props.handleOrder}>Email</button></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {props.filtered.map((employee, id) => (\r\n              <tr key={id}>\r\n              <td>{employee.name.first}</td>\r\n              <td>{employee.name.last}</td>\r\n              <td>{employee.dob.age}</td>\r\n                <td><a href={`mailto: ${employee.email}`}>{employee.email}</a></td>\r\n            </tr>\r\n          ))}\r\n         \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Header(props) {\r\nreturn (\r\n  <nav id=\"nav\" className=\"navbar navbar-dark\">\r\n  <h1 className=\"navbar-brand\">Employee Directory</h1>\r\n  <form className=\"form-inline\">\r\n  <p className = \"mt-3 mr-2 text-white\">Change View:</p>\r\n  <i className={props.view === \"list\" ? \"far fa-address-card text-light mr-4 mt-2 h3\" : \"far fa-list-alt text-light mr-4 mt-2 h3\"} name={props.view === \"list\" ? \"card\" : \"list\"} onClick={props.changeView}></i>\r\n\r\n    <p className = \"text-white px-3 mt-3 border-left border-info\">Employee Search: </p>\r\n    <input className=\"form-control mr-sm-2\" id=\"searchBox\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\r\n     onChange={props.handleInputChange}\r\n     value={props.value}\r\n    />\r\n   \r\n  </form>\r\n</nav>\r\n);\r\n}\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span>Employee Directory &copy; 2020 ~ Alex Coulter</span>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import './components/style.css';\nimport React, { Component } from \"react\";\nimport API from \"./utils/API\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport $ from 'jquery'; \n\nclass App extends Component {\n  state = {\n    employees: [],\n    filtered: [],\n    searchTerm: \"\",\n    order: \"\",\n    view: \"list\"\n  };\n\n  //gets employee info array from Api and set the state of 'employees' and 'filtered' to this array\n  componentDidMount() {\n    this.getEmployees();\n  }\n  getEmployees = () => {\n    API.search((empObj) => {\n      this.setState({\n        employees: empObj,\n        filtered: empObj\n      })\n    })\n  };\n\n  //Changes body padding based on navbar height\n  componentDidUpdate() {\n    $(window).resize(function() {\n    $(\"#list-container\").css(\"padding-top\", $(\"#nav\").height());\n    $(\"#list-container\").css(\"padding-top\", \"+=5%\");\n    $(\"#card-container\").css(\"padding-top\", $(\"#nav\").height());\n    $(\"#card-container\").css(\"padding-top\", \"+=5%\");\n    $(\".main\").css(\"padding-bottom\", \"-=50px\");\n  }).resize();\n  }\n\n  //Change order of employees by field\n  handleOrder = (event) => {\n    event.persist();\n    const orderBy = event.target.attributes.getNamedItem(\"name\").value;\n\n    if (this.state.order !== \"123\") {\n      this.setState({ order: \"123\" },\n        () => {\n          API.sortJSON(this.state.filtered, orderBy, this.state.order, (orderedObj) => {\n            this.setState({ filtered: orderedObj })\n          })\n        });\n    }\n    else {\n      this.setState({ order: \"321\" },\n        () => {\n          API.sortJSON(this.state.filtered, orderBy, this.state.order, (orderedObj) => {\n            this.setState({ filtered: orderedObj })\n          })\n        });\n    }\n  }\n\n  //filter employees by user search\n  handleInputChange = (event) => {\n    event.preventDefault();\n    const newSearch = event.target.value.toLowerCase();\n\n    this.setState({\n      searchTerm: newSearch\n    },\n      () => {\n        this.setState({\n          filtered: this.state.employees.filter(person => \n            person.name.first.toLowerCase().includes(this.state.searchTerm) || person.name.last.toLowerCase().includes(this.state.searchTerm) || person.dob.age.toString().includes(this.state.searchTerm) || person.email.toLowerCase().includes(this.state.searchTerm))\n        });\n      })\n  }\n\n  //change from list view to card view\n  changeView = (event) => {\n    event.preventDefault();\n    const newView = event.target.attributes.getNamedItem(\"name\").value;\n    this.setState({ view: newView })\n  }\n\n  render() {\n    //renders page in 'List View'\n    if (this.state.view === \"list\") {\n      return (\n        <div id = \"wrapper\">\n          <Header\n            handleInputChange={this.handleInputChange}\n            value={this.state.searchTerm}\n            changeView={this.changeView}\n            view={this.state.view} />\n\n          <div className=\"main\">\n            <div id=\"list-container\" className=\"list-container container justify-content-center\">\n              <EmployeeList\n                filtered={this.state.filtered}\n                handleOrder={this.handleOrder}\n              />\n            </div>\n            <div className=\"push\"></div>\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n     //renders page in 'Card View'\n    else if (this.state.view === \"card\") {\n      return (\n        <div id=\"wrapper\">\n          <Header\n            handleInputChange={this.handleInputChange}\n            value={this.state.searchTerm}\n            changeView={this.changeView} />\n          <div className=\"main\">\n            <div id=\"card-container\" className=\"card-container justify-content-center\">\n              {this.state.filtered.map((employee, id) => (\n                <EmployeeCard\n                  key={id}\n                  age={employee.dob.age}\n                  firstName={employee.name.first}\n                  lastName={employee.name.last}\n                  image={employee.picture.large}\n                  gender={employee.gender}\n                  email={employee.email}\n                />\n              ))}\n            </div>\n            <div className=\"push\"></div>\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}